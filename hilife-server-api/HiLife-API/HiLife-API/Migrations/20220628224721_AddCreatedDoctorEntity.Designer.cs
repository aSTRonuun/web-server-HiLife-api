// <auto-generated />
using System;
using HiLife_API.Model.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HiLife_API.Migrations
{
    [DbContext(typeof(MySQLContext))]
    [Migration("20220628224721_AddCreatedDoctorEntity")]
    partial class AddCreatedDoctorEntity
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("HiLife_API.Model.AvailableTime", b =>
                {
                    b.Property<long>("DoctorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long>("DoctorId1")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("Time")
                        .HasColumnType("datetime(6)");

                    b.HasKey("DoctorId");

                    b.HasIndex("DoctorId1");

                    b.ToTable("AvailableTime");
                });

            modelBuilder.Entity("HiLife_API.Model.Doctor", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<int>("CRM")
                        .HasColumnType("int")
                        .HasColumnName("crm");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("email");

                    b.Property<string>("HospitalName")
                        .HasColumnType("longtext")
                        .HasColumnName("name_hospital");

                    b.Property<string>("ImageURL")
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("image_url");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("password");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("longtext")
                        .HasColumnName("refresh_token");

                    b.Property<DateTime?>("RefreshTokenExperyTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("refresh_token_experiy_time");

                    b.Property<string>("Specialty")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("specialty");

                    b.HasKey("Id");

                    b.ToTable("Doctors");
                });

            modelBuilder.Entity("HiLife_API.Model.Patient", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("address");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("cep");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ImageURL")
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("image_url");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("password");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("longtext")
                        .HasColumnName("refresh_token");

                    b.Property<DateTime?>("RefreshTokenExperyTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("refresh_token_experiy_time");

                    b.HasKey("Id");

                    b.ToTable("patient");
                });

            modelBuilder.Entity("HiLife_API.Model.AvailableTime", b =>
                {
                    b.HasOne("HiLife_API.Model.Doctor", null)
                        .WithMany("AvailableTimes")
                        .HasForeignKey("DoctorId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HiLife_API.Model.Doctor", b =>
                {
                    b.Navigation("AvailableTimes");
                });
#pragma warning restore 612, 618
        }
    }
}
